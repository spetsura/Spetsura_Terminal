name: CI/CD Prod

on:
  push:
    branches: [ "master" ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: [selfhosted, prod]
    steps:
      - uses: actions/checkout@v4

      - name: Show workspace
        run: |
          pwd
          ls -la

      - name: Detect source dir
        id: detect
        run: |
          if [ -d "dist" ] && [ -n "$(ls -A dist)" ]; then
            echo "src=dist" >> $GITHUB_OUTPUT
          else
            echo "src=." >> $GITHUB_OUTPUT
          fi
          echo "Using source: $(cat $GITHUB_OUTPUT)"

      - name: Prepare artifact dir
        run: |
          set -euo pipefail
          SRC="${{ steps.detect.outputs.src }}"
          rm -rf artifact
          mkdir -p artifact
          if [ "$SRC" = "dist" ]; then
            rsync -a --delete "$SRC"/ artifact/
          else
            rsync -a --delete . artifact/ \
              --exclude .git --exclude .github --exclude node_modules --exclude artifact
          fi
          echo "Artifact content:"
          ls -la artifact | head -n 50

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-artifact
          path: artifact/
          if-no-files-found: error

  deploy:
    needs: build
    runs-on: [selfhosted, prod]
    environment:
      name: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: site-artifact
          path: artifact

      - name: Deploy (atomic symlink)
        run: |
          set -euo pipefail
          
          APP_DIR=/var/www/myapp
          TS=$(date +%Y%m%d%H%M%S)
          REL=$APP_DIR/releases/$TS
          
          mkdir -p "$APP_DIR/releases" "$APP_DIR/shared" "$APP_DIR/shared/uploads"

          
          mkdir -p "$REL"
          rsync -a --delete artifact/ "$REL"/
          
          [ -f "$APP_DIR/shared/.env" ] && ln -sfn "$APP_DIR/shared/.env" "$REL/.env" || true
          [ -d "$APP_DIR/shared/uploads" ] && ln -sfn "$APP_DIR/shared/uploads" "$REL/uploads" || true
          
          ln -sfn "$REL" "$APP_DIR/current"

      - name: Reload nginx
        run: |
          /usr/bin/sudo /usr/sbin/nginx -t
          /usr/bin/sudo /bin/systemctl reload nginx || /usr/bin/sudo /bin/systemctl restart myapp.service

      - name: Keep last 3 releases
        run: |
         set -euo pipefail
         APP_DIR=/var/www/myapp
         cd "$APP_DIR/releases"
         ls -1dt */ | tail -n +4 | xargs -r rm -rf --
