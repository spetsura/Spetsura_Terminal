name: CI/CD Prod

on:
  push:
    branches: [ "master" ]    
  workflow_dispatch: {}

jobs:
  build:
    runs-on: [selfhosted, prod]
    steps:
      - uses: actions/checkout@v4

      - name: Show workspace
        run: |
          pwd
          ls -la

      - name: Detect source dir
        id: detect
        run: |
          if [ -d "dist" ] && [ -n "$(ls -A dist)" ]; then
            echo "src=dist" >> $GITHUB_OUTPUT
          else
            echo "src=." >> $GITHUB_OUTPUT
          fi
          echo "Using source: $(cat $GITHUB_OUTPUT)"

      - name: Package artifact
        run: |
          set -euo pipefail
          SRC="${{ steps.detect.outputs.src }}"
          echo "Packing from: $SRC"

          if [ "$SRC" = "dist" ]; then
            # пакуем содержимое dist/
            tar -czf artifact.tar.gz -C dist .
          else
            tar \
              --exclude=.git \
              --exclude=.github \
              --exclude=node_modules \
              --exclude=artifact \
              -czf artifact.tar.gz \
              -C . .
          fi

          echo "Artifact size:"
          ls -lh artifact.tar.gz
          echo "First files in archive:"
          tar -tzf artifact.tar.gz | head -n 20

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-artifact
          path: artifact.tar.gz
          if-no-files-found: error

  deploy:
    needs: build
    runs-on: [selfhosted, prod]
    environment:
      name: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: site-artifact

      - name: Deploy (atomic symlink)
        run: |
          set -euo pipefail
          APP_DIR=/var/www/myapp
          TS=$(date +%Y%m%d%H%M%S)
          REL=$APP_DIR/releases/$TS

          mkdir -p "$REL"
          tar -C "$REL" -xzf artifact.tar.gz

          [ -f "$APP_DIR/shared/.env" ] && ln -sfn "$APP_DIR/shared/.env" "$REL/.env" || true
          [ -d "$APP_DIR/shared/uploads" ] && ln -sfn "$APP_DIR/shared/uploads" "$REL/uploads" || true

          ln -sfn "$REL" "$APP_DIR/current"

      - name: Reload nginx (limited sudo)
        run: |
          /usr/bin/sudo /usr/sbin/nginx -t
          /usr/bin/sudo /bin/systemctl reload nginx || /usr/bin/sudo /bin/systemctl restart myapp.service

      - name: Keep last 3 releases
        run: |
          set -euo pipefail
          cd /var/www/myapp/releases
          ls -1tr | head -n -3 | xargs -r rm -rf
